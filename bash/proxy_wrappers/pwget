#!/bin/bash

# simlar to package-mgr (see description) but for wget

source ./common.sh

function pwget_wrapper {
   : '
    Wget Proxy Wrapper

    ShortDesc: A wrapper for the wget command that supports optional proxy and SSL certificate usage.

    Description:
    This function provides a convenient way to execute wget commands with optional proxy settings 
    and SSL certificate handling. It takes a URL as the first parameter and any additional wget 
    parameters as subsequent arguments. If proxy usage is enabled via the USE_PROXY environment variable, 
    it configures wget to use the specified proxy. If a base64-encoded SSL certificate is provided, 
    it decodes it to a temporary file for use with wget.

    Parameters:
    - url: The URL to be retrieved with wget.
    - additional_params: Additional parameters to pass to the wget command (optional).

    Environment Variables:
    - USE_PROXY: Set to "true" to enable proxy usage.
    - HTTPS_PROXY: The proxy URL to use if USE_PROXY is true.
    - CERT_BASE64_STRING: Base64-encoded SSL certificate string for verifying proxy connections (optional).

    Returns:
    - 0: Success (wget command executed successfully)
    - 1: Failure (if the wget command fails)

    Example Usage:
    pwget_wrapper "https://example.com/file.zip" --output-document=myfile.zip
    '

    local url="$1"
    shift
    local additional_params="$@"

    local wget_cmd="wget"
    local proxy_cmd=""
    local cert_cmd=""

    if [ "${USE_PROXY,,}" == "true" ]; then
        if test_env_variable_defined CERT_BASE64_STRING; then
            # Create a temporary file for the cert
            TEMP_CERT_FILE=$(create_temp_file)
            echo "${CERT_BASE64_STRING}" | base64 -d > "${TEMP_CERT_FILE}"
            cert_cmd="--ca-certificate=${TEMP_CERT_FILE}"
        fi
        proxy_cmd="--proxy=${HTTPS_PROXY}"
    fi

    # Execute wget with the appropriate options
    ${wget_cmd} ${proxy_cmd} ${cert_cmd} ${additional_params} "${url}"

    # Clean up temporary cert file if created
    if [ -n "${TEMP_CERT_FILE}" ]; then
        rm "${TEMP_CERT_FILE}"
    fi
}
